"""
Django settings for Peak project.

Generated by 'django-admin startproject' using Django 4.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import environ

env = environ.Env()
environ.Env.read_env()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'pereval',
    'rest_framework',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Peak.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Peak.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': env("DB_NAME"),
        'USER': env("DB_USER"),
        'PASSWORD': env("DB_PASSWORD"),
        'HOST': env("DB_HOST"),
        'PORT': env("DB_PORT"),
    },
}

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     'formatters': {
#         'format_warning': {
#             'format': '{pathname}',
#             'style': '{',
#         },
#         'format_errors': {
#             'format': '{exc_info}',
#             'style': '{',
#         },
#         'format_for_mail': {
#             'format': '%(asctime)s %(levelname)s %(message)s %(pathname)s',
#             'datefmt': '%d.%m.%Y %H:%M:%S',
#         },
#         'simple': {
#             'format': '%(asctime)s %(levelname)s %(message)-8s',
#             'datefmt': '%d.%m.%Y %H:%M:%S',
#         },
#         'format_for_errors': {
#             'format': '{asctime} {levelname} {message} {pathname} {exc_info}',
#             'datefmt': '%d.%m.%Y %H:%M:%S',
#             'style': '{',
#
#         },
#
#         'format_for_general': {
#             'format': '%(asctime)s %(levelname)s %(module)s: %(message)s',
#             'datefmt': '%d.%m.%Y %H:%M:%S',
#         },
#
#     },
#
#     'filters': {
#         'require_debug_true': {
#             '()': 'django.utils.log.RequireDebugTrue',
#         },
#         'require_debug_false': {
#             '()': 'django.utils.log.RequireDebugFalse'
#         }
#     },
#     'handlers': {
#         'console_debug': {
#             'level': 'DEBUG',
#             'filters': ['require_debug_true'],
#             'class': 'logging.StreamHandler',
#             'formatter': 'simple'
#         },
#         'console_warning': {
#             'level': 'WARNING',
#             'filters': ['require_debug_true'],
#             'class': 'logging.StreamHandler',
#             'formatter': 'format_warning',
#         },
#         'console_error': {
#             'level': 'ERROR',
#             'filters': ['require_debug_true'],
#             'class': 'logging.StreamHandler',
#             'formatter': 'format_errors',
#         },
#
#     },
#     'loggers': {
#         '': {
#             'handlers': [
#                 'console_debug',
#                 'console_warning',
#                 'console_error',
#             ],
#             'level': 'INFO',
#         },
#         'django': {
#             'handlers': [
#                 'console_debug',
#                 'console_warning',
#                 'console_error',
#             ],
#             'level': 'INFO',
#         },
#         # 'django.request': {
#         #     'handlers': [
#         #         'mail_admins',
#         #         'file_errors',
#         #     ],
#         #     'level': 'ERROR',
#         #     'propagate': False,
#         # },
#         # 'django.server': {
#         #     'handlers': [
#         #         'mail_admins',
#         #         'file_errors',
#         #     ],
#         #     'level': 'ERROR',
#         #     'propagate': False,
#         # },
#         # 'django.template': {
#         #     'handlers': [
#         #         'file_errors',
#         #     ],
#         #     'propagate': False,
#         # },
#         # 'django.db.backends': {
#         #     'handlers': [
#         #         'file_errors',
#         #     ],
#         #     'propagate': False,
#         # },
#         # 'django.security': {
#         #     'handlers': [
#         #         'file_security',
#         #     ],
#         #     'propagate': False,
#         # }
#
#     }
# }
#
